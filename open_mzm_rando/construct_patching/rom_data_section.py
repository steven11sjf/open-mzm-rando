from construct import (Array, Bytes, Hex, Int8ul, Int16ul, Int32ul, Struct)

from open_mzm_rando.construct_patching import data_structs

Pointer = Hex(Int32ul)

# data courtesy of labk (https://labk.org/maps/app/?game=zm&region=u&map=data)

# all code in the rom (0x8C71C - 0x7F7734)
ROM_DATA = Struct(
	SineYValues = Array(0x140, Int16ul), # Sine Y values
	RandomNumberTable = Array(0x100, Int8ul), # Random number table
	InterruptHandlerPtrs = Array(0xD, Pointer), # Interrupt handler pointers
	DelayNoteLengthTable = Array(0x31, Int8ul), # Delay/note length table
	Sound3Waveform_Square50 = Array(0x10, Int8ul), # Sound channel 3 square 50% waveform
	SoundDataEntries = Array(0x2C4, data_structs.SoundDataEntry), # Sound data entries[+]
	SamusPoseDrawInfo = Bytes(0x9), # Samus pose draw info[+]
	SamusDrawDistanceOffsets = Bytes(0x20), # Samus draw distance offsets[+]
	SamusHitboxData = Bytes(0x18), # Samus hitbox data[+]
	SamusEnvironEffectsOamPtrs = Bytes(0x48), # Samus environmental effects OAM pointers[+]
	SamusPullingSelfUpYVelocity = Bytes(0x8), # Samus pulling self up Y velocity
	RandomNumTable_0_F = Bytes(0x20), # Random number table (0-F)
	DessgeegaAndSidehopperJumpSpeeds = Bytes(0x20), # Dessgeega/Sidehopper jump speeds
	EnemyFallSpeeds = Bytes(0x50), # Enemy fall speeds
	WorkerRobotFallingWhileSleepingSpeeds = Bytes(0x14), # Worker robot falling while sleeping speeds
	PrimarySpriteStats = Bytes(0xE7C), # Primary sprite stats[+]
	SecondarySpriteStats = Bytes(0x56A), # Secondary sprite stats[+]
	ChargeBeamSpriteYPositionOffsets = Bytes(0x84), # Charge beam sprite Y position offsets
	ChozoStatueHintFlashingPaletteRows = Bytes(0x80), # Chozo statue hint flashing palette rows
	ZeelaEyesFallingFromTopSpeeds = Bytes(0x20), # Zeela eyes falling from top speeds
	ZeelaEyesFallingFromBottomSpeeds = Bytes(0x18), # Zeela eyes falling from bottom speeds
	SkreeDivingSpeeds = Bytes(0x10), # Skree diving speeds
	ReoIdleAnimYPositionOffsets = Bytes(0x82), # Reo idle animation Y position offsets
	ReoIdleAnimXPositionOffsets = Bytes(0xA2), # Reo idle animation X position offsets
	MellowIdleYVelocity = Bytes(0x82), # Mellow idle Y velocity
	MellowIdleXVelocity = Bytes(0xA2), # Mellow idle X velocity
	ImagoLarvaFlashingBellyPaletteRows = Bytes(0x80), # Imago larva flashing belly palette rows
	MetroidSpawningYPositionOffsets = Bytes(0x82), # Metroid spawning Y position offsets
	MetroidSpawningXPositionOffsets = Bytes(0xA4), # Metroid spawning X position offsets
	MetroidSamusGrabbedPalette = Bytes(0xA0), # Metroid Samus grabbed palette
	GunshipTakingOffYVelocity = Bytes(0x132), # Gunship taking off Y velocity
	GunshipFlyingYVelocity = Bytes(0x2E), # Gunship flying Y velocity
	TumblingMissileSpeeds = Bytes(0x20), # Tumbling missile speeds
	CommonSpritePalette = Bytes(0xC0), # Common sprite palette
	CommonSpriteGfx = Bytes(0x3800), # Common sprite graphics
	MissileDigitGfx = Bytes(0x900), # Missile digit graphics
	PowerBombDigitGfx = Bytes(0x900), # Power bomb digit graphics
	SuitlessHudChargedBarGfx = Bytes(0x100), # Suitless HUD charged bar graphics
	SamusEnvironEffect_RunningOnDustyGroundOAM = Bytes(0x30), # Samus environmental effect running on dusty ground OAM[+]
	SamusEnvironEffect_LandingOrSkiddingOnDustyGroundOAM = Bytes(0x38), # Samus environmental effect landing/skidding on dusty ground OAM[+]
	SamusEnvironEffect_TakingDamageInLavaOAM = Bytes(0x48), # Samus environmental effect taking damage in lava OAM[+]
	SamusEnvironEffect_TakingDamageInAcidOAM = Bytes(0x48), # Samus environmental effect taking damage in acid OAM[+]
	SamusEnvironEffect_RunningOnWetGroundOAM = Bytes(0x30), # Samus environmental effect running on wet ground OAM[+]
	SamusEnvironEffect_LandingOrSkiddingOnWetGroundOAM = Bytes(0x30), # Samus environmental effect landing/skidding on wet ground OAM[+]
	SamusEnvironEffect_GoingOutOfWaterOAM = Bytes(0x50), # Samus environmental effect going out of water OAM[+]
	SamusEnvironEffect_RunningIntoWaterOAM = Bytes(0x38), # Samus environmental effect running into water OAM[+]
	SamusEnvironEffect_GoingOutOfLavaOAM = Bytes(0x50), # Samus environmental effect going out of lava OAM[+]
	SamusEnvironEffect_RunningIntoLavaOAM = Bytes(0x38), # Samus environmental effect running into lava OAM[+]
	SamusEnvironEffect_GoingOutOfAcidOAM = Bytes(0x58), # Samus environmental effect going out of acid OAM[+]
	SamusEnvironEffect_RunningIntoAcidOAM = Bytes(0x38), # Samus environmental effect running into acid OAM[+]
	SamusEnvironEffect_LandingOnBubblyGroundOAM = Bytes(0x38), # Samus environmental effect landing on bubbly ground OAM[+]
	SamusEnvironEffect_BreathingBubblesOAM = Bytes(0x40), # Samus environmental effect breathing bubbles OAM[+]
	SamusEnvironEffect_RunningOnVeryDustyGroundOAM = Bytes(0x60), # Samus environmental effect running on very dusty ground OAM[+]
	SamusEnvironEffect_LandingOnVeryDustyGroundOAM = Bytes(0x80), # Samus environmental effect landing on very dusty ground OAM[+]
	EmptySpriteLayout = Bytes(0x3), # Empty sprite layout[+]
	TilesetEntries = Bytes(0x62C), # Tileset entries[+]
	BrinstarDoors = Bytes(0x4A4), # Brinstar doors[+]
	KraidDoors = Bytes(0x504), # Kraid doors[+]
	NorfairDoors = Bytes(0x63C), # Norfair doors[+]
	RidleyDoors = Bytes(0x39C), # Ridley doors[+]
	TourianDoors = Bytes(0x210), # Tourian doors[+]
	CrateriaDoors = Bytes(0x27C), # Crateria doors[+]
	ChozodiaDoors = Bytes(0xB88), # Chozodia doors[+]
	BrinstarRoomEntries = Bytes(0x9D8), # Brinstar room entries[+]
	KraidRoomEntries = Bytes(0x9D8), # Kraid room entries[+]
	NorfairRoomEntries = Bytes(0xD5C), # Norfair room entries[+]
	RidleyRoomEntries = Bytes(0x7BC), # Ridley room entries[+]
	TourianRoomEntries = Bytes(0x4B0), # Tourian room entries[+]
	CrateriaRoomEntries = Bytes(0x528), # Crateria room entries[+]
	ChozodiaRoomEntries = Bytes(0x1AF4), # Chozodia room entries[+]
	MovementPreventingClipdataValues = Bytes(0x1E), # Movement preventing clipdata values
	ElevatorRoomPairs = Bytes(0x48), # Elevator room pairs[+]
	NumTanksPerArea = Bytes(0x20), # Number of tanks per area[+]
	StartingHealthAndAmmo = Bytes(0x4), # Starting health/ammo[+]
	TankIncreaseAmounts = Bytes(0xC), # Tank increase amounts[+]
	ClipdataAffectingActionDamageType = Bytes(0x20), # Clipdata affecting action damage type
	BreakableBlockBehavior = Bytes(0xC0), # Breakable block behavior[+]
	BlockWeaknesses = Bytes(0x2C), # Block weaknesses[+]
	ReformBlocksTimeToReform = Bytes(0x120), # Reform blocks time to reform
	TankCollectionInfo = Bytes(0x60), # Tank collection info[+]
	HatchBehaviors = Bytes(0x20), # Hatch behaviors[+]
	BLDALPHA_ValuesForClipdata = Bytes(0x16), # BLDALPHA values for clipdata
	SubBombChainTriggerPositionOffset = Bytes(0x10), # Sub-bomb chain trigger position offset
	MotherBrainGlassBreakingBGValuesStart = Bytes(0xA), # Mother Brain glass breaking BG values start
	StrongBG3HazeMovement = Bytes(0x30), # Strong BG3 haze movement
	Haze_BG1_BG2_BG3_Offsets = Bytes(0x120), # Haze BG1 BG2 BG3 offsets
	AnimatedGraphicsEntries = Array(0x26, data_structs.AnimatedGraphicsEntry), # Animated graphics entries[+]
	AnimatedTilesetEntries = Array(0x30, Bytes(0x8)), # Animated tileset entries
	AnimatedPaletteEntries = Array(0x12, data_structs.AnimatedPaletteEntry), # Animated palette entries[+]
	SpecialBGEffectsColorData = Bytes(0x48), # Special BG effects color data[+]
	SpecialBGEffectBehavior_Lightning = Bytes(0xCC), # Special background effect behavior lightning[+]
	SpecialBGEffectBehavior_QuickFlash = Bytes(0x48), # Special background effect behavior quick flash[+]
	SpecialBGEffectBehavior_SlightYellow = Bytes(0x7E), # Special background effect behavior slight yellow[+]
	SpecialBGEffectBehavior_HeavyYellow = Bytes(0x78), # Special background effect behavior heavy yellow[+]
	SpecialBGEffectBehavior_ExitZebes = Bytes(0xB4), # Special background effect behavior exit Zebes[+]
	SpecialBGEffectBehavior_IntroText = Bytes(0xB4), # Special background effect behavior intro text[+]
	SpecialBGEffectBehavior_AllBlackWhite = Bytes(0xEA), # Special background effect behavior all black/white[+]
	HatchLockEvents = Bytes(0x98), # Hatch lock events[+]
	EventBasedConnections = Bytes(0xA4), # Event based connections[+]
	AreaConnections = Array(0x1A, data_structs.AreaConnection), # Area connections[+]
	HatchesTimeBetweenAnims = Array(0x6, Int8ul), # Hatches time between animations
	NumOfHatchLockEventsPerArea = Bytes(0x10), # Number of hatch lock events per area
	DemoInputData = Bytes(0x100), # Demo input data[+]
	DoorTransitionTilemap_RLE = Bytes(0xB8), # Door transition tilemap (RLE compressed)
	ClipdataBehaviorTypes400 = Bytes(0x1A0), # Clipdata behavior types (0x400)[+]
	ClipdataCollisionTypes400 = Bytes(0xD0), # Clipdata collision types (0x400)[+]
	Tilemap400 = Bytes(0x680), # Tilemap (0x400)
	ClipdataCollisionTypes_Debug = Bytes(0xA0), # Clipdata collision types (debug)[+]
	ClipdataBehaviorTypes_Debug = Bytes(0x140), # Clipdata behavior types (debug)[+]
	Debug1_00_SpriteLayout = Bytes(0x6), # Debug 1 room 0 sprite layout[+]
	Debug1_01_SpriteLayout = Bytes(0x9), # Debug 1 room 1 sprite layout[+]
	Debug1_02_SpriteLayout = Bytes(0x6), # Debug 1 room 2 sprite layout[+]
	Debug1_03_SpriteLayout = Bytes(0x6), # Debug 1 room 3 sprite layout[+]
	Debug_04_SpriteLayout = Bytes(0x3), # Debug room 4 sprite layout[+]
	Debug2_00_SpriteLayout = Bytes(0x6), # Debug 2 room 0 sprite layout[+]
	Debug2_01_SpriteLayout = Bytes(0x3), # Debug 2 room 1 sprite layout[+]
	Debug2_02_SpriteLayout = Bytes(0x3), # Debug 2 room 2 sprite layout[+]
	Debug2_03_SpriteLayout = Bytes(0x3), # Debug 2 room 3 sprite layout[+]
	Debug3_00_SpriteLayout = Bytes(0x15), # Debug 3 room 0 sprite layout[+]
	Debug3_01_SpriteLayout = Bytes(0x3), # Debug 3 room 1 sprite layout[+]
	Debug3_02_SpriteLayout = Bytes(0x3), # Debug 3 room 2 sprite layout[+]
	Debug3_03_SpriteLayout = Bytes(0x3), # Debug 3 room 3 sprite layout[+]
	CutsceneData = Bytes(0xF0), # Cutscene data[+]
	BossMapIcons = Bytes(0x23), # Boss map icons[+]
	CharacterWidths = Bytes(0x4A0), # Character widths
	ChozoStatueHints = Bytes(0x78), # Chozo statue hints[+]
	ChozoHintChecks = Bytes(0x20), # Chozo hint checks[+]
	ChozoHintTriggerEvents = Bytes(0x10), # Chozo hint trigger events[+]
	DefaultButtonAssignments = Bytes(0x10), # Default button assignments[+]
	TimeAttackButtonCode = Bytes(0xA), # Time attack button code[+]
	TimeAttackPasswordChars = Bytes(0x20), # Time attack password characters
	MetroidFusionGalleryData = Bytes(0x104), # Metroid Fusion gallery data[+]
	EndingImagesTopHalfGfxPtrs = Bytes(0x20), # Ending images top half graphics pointers
	EndingImagesBottomHalfGfxPtrs = Bytes(0x20), # Ending images bottom half graphics pointers
	EndingImagesTopHalfTilemapPtrs = Bytes(0x20), # Ending images top half tilemap pointers
	EndingImagesBottomHalfTilemapPtrs = Bytes(0x20), # Ending images bottom half tilemap pointers
	EndingImagesPalettePtrs = Bytes(0x20), # Ending images palette pointers
	ClipdataCollisionTypes = Bytes(0xB0), # Clipdata collision types[+]
	ClipdataBehaviorTypes = Bytes(0x160), # Clipdata behavior types[+]
	CommonBGGfx = Bytes(0x1000), # Common background graphics
	CommonBGPalette = Bytes(0x140), # Common background palette
	Brinstar_00_SpriteLayout1 = Bytes(0x1B), # Brinstar room 0 sprite layout 1[+]
	Brinstar_00_SpriteLayout0 = Bytes(0x1B), # Brinstar room 0 sprite layout 0[+]
	Brinstar_01_SpriteLayout1 = Bytes(0x2D), # Brinstar room 1 sprite layout 1[+]
	Brinstar_01_SpriteLayout0 = Bytes(0x18), # Brinstar room 1 sprite layout 0[+]
	Brinstar_02_SpriteLayout2 = Bytes(0x15), # Brinstar room 2 sprite layout 2[+]
	Brinstar_02_SpriteLayout1 = Bytes(0xF), # Brinstar room 2 sprite layout 1[+]
	Brinstar_02_SpriteLayout0 = Bytes(0xF), # Brinstar room 2 sprite layout 0[+]
	Brinstar_03_SpriteLayout1 = Bytes(0x27), # Brinstar room 3 sprite layout 1[+]
	Brinstar_03_SpriteLayout0 = Bytes(0x27), # Brinstar room 3 sprite layout 0[+]
	Brinstar_04_SpriteLayout0 = Bytes(0xC), # Brinstar room 4 sprite layout 0[+]
	Brinstar_05_SpriteLayout0 = Bytes(0x6), # Brinstar room 5 sprite layout 0[+]
	Brinstar_06_SpriteLayout0 = Bytes(0x3), # Brinstar room 6 sprite layout 0[+]
	Brinstar_07_SpriteLayout1 = Bytes(0x39), # Brinstar room 7 sprite layout 1[+]
	Brinstar_07_SpriteLayout0 = Bytes(0x36), # Brinstar room 7 sprite layout 0[+]
	Brinstar_08_SpriteLayout1 = Bytes(0x12), # Brinstar room 8 sprite layout 1[+]
	Brinstar_08_SpriteLayout0 = Bytes(0x9), # Brinstar room 8 sprite layout 0[+]
	Brinstar_09_SpriteLayout1 = Bytes(0x6), # Brinstar room 9 sprite layout 1[+]
	Brinstar_09_SpriteLayout0 = Bytes(0x3), # Brinstar room 9 sprite layout 0[+]
	Brinstar_0A_SpriteLayout0 = Bytes(0x9), # Brinstar room A sprite layout 0[+]
	Brinstar_0B_SpriteLayout0 = Bytes(0x6), # Brinstar room B sprite layout 0[+]
	Brinstar_0C_SpriteLayout0 = Bytes(0xF), # Brinstar room C sprite layout 0[+]
	Brinstar_0D_SpriteLayout0 = Bytes(0x18), # Brinstar room D sprite layout 0[+]
	Brinstar_0E_SpriteLayout0 = Bytes(0x6), # Brinstar room E sprite layout 0[+]
	Brinstar_0F_SpriteLayout0 = Bytes(0xC), # Brinstar room F sprite layout 0[+]
	Brinstar_10_SpriteLayout0 = Bytes(0x27), # Brinstar room 10 sprite layout 0[+]
	Brinstar_11_SpriteLayout0 = Bytes(0x12), # Brinstar room 11 sprite layout 0[+]
	Brinstar_12_SpriteLayout0 = Bytes(0x6), # Brinstar room 12 sprite layout 0[+]
	Brinstar_13_SpriteLayout1 = Bytes(0x15), # Brinstar room 13 sprite layout 1[+]
	Brinstar_13_SpriteLayout0 = Bytes(0xF), # Brinstar room 13 sprite layout 0[+]
	Brinstar_14_SpriteLayout0 = Bytes(0x12), # Brinstar room 14 sprite layout 0[+]
	Brinstar_15_SpriteLayout1 = Bytes(0x1B), # Brinstar room 15 sprite layout 1[+]
	Brinstar_15_SpriteLayout0 = Bytes(0xC), # Brinstar room 15 sprite layout 0[+]
	Brinstar_16_SpriteLayout1 = Bytes(0x1B), # Brinstar room 16 sprite layout 1[+]
	Brinstar_16_SpriteLayout0 = Bytes(0x9), # Brinstar room 16 sprite layout 0[+]
	Brinstar_17_SpriteLayout0 = Bytes(0x33), # Brinstar room 17 sprite layout 0[+]
	Brinstar_18_SpriteLayout0 = Bytes(0xF), # Brinstar room 18 sprite layout 0[+]
	Brinstar_19_SpriteLayout0 = Bytes(0x6), # Brinstar room 19 sprite layout 0[+]
	Brinstar_1A_SpriteLayout0 = Bytes(0x6), # Brinstar room 1A sprite layout 0[+]
	Brinstar_1B_SpriteLayout0 = Bytes(0x6), # Brinstar room 1B sprite layout 0[+]
	Brinstar_1C_SpriteLayout2 = Bytes(0x27), # Brinstar room 1C sprite layout 2[+]
	Brinstar_1C_SpriteLayout1 = Bytes(0x18), # Brinstar room 1C sprite layout 1[+]
	Brinstar_1C_SpriteLayout0 = Bytes(0x21), # Brinstar room 1C sprite layout 0[+]
	Brinstar_1D_SpriteLayout0 = Bytes(0x3), # Brinstar room 1D sprite layout 0[+]
	Brinstar_1E_SpriteLayout0 = Bytes(0x6), # Brinstar room 1E sprite layout 0[+]
	Brinstar_1F_SpriteLayout0 = Bytes(0xF), # Brinstar room 1F sprite layout 0[+]
	Brinstar_20_SpriteLayout0 = Bytes(0x6), # Brinstar room 20 sprite layout 0[+]
	Brinstar_21_SpriteLayout0 = Bytes(0x6), # Brinstar room 21 sprite layout 0[+]
	Brinstar_22_SpriteLayout0 = Bytes(0x6), # Brinstar room 22 sprite layout 0[+]
	Brinstar_23_SpriteLayout0 = Bytes(0x9), # Brinstar room 23 sprite layout 0[+]
	Brinstar_24_SpriteLayout0 = Bytes(0x6), # Brinstar room 24 sprite layout 0[+]
	Brinstar_25_SpriteLayout0 = Bytes(0x6), # Brinstar room 25 sprite layout 0[+]
	Brinstar_26_SpriteLayout1 = Bytes(0x15), # Brinstar room 26 sprite layout 1[+]
	Brinstar_26_SpriteLayout0 = Bytes(0xF), # Brinstar room 26 sprite layout 0[+]
	Brinstar_27_SpriteLayout0 = Bytes(0x6), # Brinstar room 27 sprite layout 0[+]
	Brinstar_28_SpriteLayout0 = Bytes(0x9), # Brinstar room 28 sprite layout 0[+]
	Brinstar_29_SpriteLayout1 = Bytes(0x36), # Brinstar room 29 sprite layout 1[+]
	Brinstar_29_SpriteLayout0 = Bytes(0x33), # Brinstar room 29 sprite layout 0[+]
	Kraid_00_SpriteLayout0 = Bytes(0x1E), # Kraid room 0 sprite layout 0[+]
	Kraid_01_SpriteLayout1 = Bytes(0xF), # Kraid room 1 sprite layout 1[+]
	Kraid_01_SpriteLayout0 = Bytes(0x12), # Kraid room 1 sprite layout 0[+]
	Kraid_02_SpriteLayout1 = Bytes(0x2D), # Kraid room 2 sprite layout 1[+]
	Kraid_02_SpriteLayout0 = Bytes(0x2D), # Kraid room 2 sprite layout 0[+]
	Kraid_03_SpriteLayout1 = Bytes(0xC), # Kraid room 3 sprite layout 1[+]
	Kraid_03_SpriteLayout0 = Bytes(0xF), # Kraid room 3 sprite layout 0[+]
	Kraid_04_SpriteLayout0 = Bytes(0x12), # Kraid room 4 sprite layout 0[+]
	Kraid_05_SpriteLayout1 = Bytes(0xF), # Kraid room 5 sprite layout 1[+]
	Kraid_05_SpriteLayout0 = Bytes(0x12), # Kraid room 5 sprite layout 0[+]
	Kraid_06_SpriteLayout1 = Bytes(0x1E), # Kraid room 6 sprite layout 1[+]
	Kraid_06_SpriteLayout0 = Bytes(0x1E), # Kraid room 6 sprite layout 0[+]
	Kraid_07_SpriteLayout1 = Bytes(0x6), # Kraid room 7 sprite layout 1[+]
	Kraid_07_SpriteLayout0 = Bytes(0x9), # Kraid room 7 sprite layout 0[+]
	Kraid_08_SpriteLayout0 = Bytes(0xC), # Kraid room 8 sprite layout 0[+]
	Kraid_09_SpriteLayout0 = Bytes(0x18), # Kraid room 9 sprite layout 0[+]
	Kraid_0A_SpriteLayout0 = Bytes(0x12), # Kraid room A sprite layout 0[+]
	Kraid_0B_SpriteLayout0 = Bytes(0x15), # Kraid room B sprite layout 0[+]
	Kraid_0C_SpriteLayout1 = Bytes(0x27), # Kraid room C sprite layout 1[+]
	Kraid_0C_SpriteLayout0 = Bytes(0x15), # Kraid room C sprite layout 0[+]
	Kraid_0D_SpriteLayout1 = Bytes(0x30), # Kraid room D sprite layout 1[+]
	Kraid_0D_SpriteLayout0 = Bytes(0x30), # Kraid room D sprite layout 0[+]
	Kraid_0E_SpriteLayout0 = Bytes(0xC), # Kraid room E sprite layout 0[+]
	Kraid_0F_SpriteLayout1 = Bytes(0x9), # Kraid room F sprite layout 1[+]
	Kraid_0F_SpriteLayout0 = Bytes(0x9), # Kraid room F sprite layout 0[+]
	Kraid_10_SpriteLayout0 = Bytes(0x3), # Kraid room 10 sprite layout 0[+]
	Kraid_11_SpriteLayout0 = Bytes(0xF), # Kraid room 11 sprite layout 0[+]
	Kraid_12_SpriteLayout1 = Bytes(0xC), # Kraid room 12 sprite layout 1[+]
	Kraid_12_SpriteLayout0 = Bytes(0x9), # Kraid room 12 sprite layout 0[+]
	Kraid_13_SpriteLayout0 = Bytes(0x3), # Kraid room 13 sprite layout 0[+]
	Kraid_14_SpriteLayout0 = Bytes(0x6), # Kraid room 14 sprite layout 0[+]
	Kraid_15_SpriteLayout0 = Bytes(0x30), # Kraid room 15 sprite layout 0[+]
	Kraid_16_SpriteLayout1 = Bytes(0x24), # Kraid room 16 sprite layout 1[+]
	Kraid_16_SpriteLayout0 = Bytes(0x24), # Kraid room 16 sprite layout 0[+]
	Kraid_17_SpriteLayout0 = Bytes(0x3), # Kraid room 17 sprite layout 0[+]
	Kraid_18_SpriteLayout0 = Bytes(0x3), # Kraid room 18 sprite layout 0[+]
	Kraid_19_SpriteLayout1 = Bytes(0x1E), # Kraid room 19 sprite layout 1[+]
	Kraid_19_SpriteLayout0 = Bytes(0x1E), # Kraid room 19 sprite layout 0[+]
	Kraid_1A_SpriteLayout1 = Bytes(0x18), # Kraid room 1A sprite layout 1[+]
	Kraid_1A_SpriteLayout0 = Bytes(0x15), # Kraid room 1A sprite layout 0[+]
	Kraid_1B_SpriteLayout1 = Bytes(0x21), # Kraid room 1B sprite layout 1[+]
	Kraid_1B_SpriteLayout0 = Bytes(0x18), # Kraid room 1B sprite layout 0[+]
	Kraid_1C_SpriteLayout0 = Bytes(0x2D), # Kraid room 1C sprite layout 0[+]
	Kraid_1D_SpriteLayout0 = Bytes(0x6), # Kraid room 1D sprite layout 0[+]
	Kraid_1E_SpriteLayout0 = Bytes(0x6), # Kraid room 1E sprite layout 0[+]
	Kraid_1F_SpriteLayout0 = Bytes(0x6), # Kraid room 1F sprite layout 0[+]
	Kraid_20_SpriteLayout0 = Bytes(0x6), # Kraid room 20 sprite layout 0[+]
	Kraid_21_SpriteLayout0 = Bytes(0x9), # Kraid room 21 sprite layout 0[+]
	Kraid_22_SpriteLayout0 = Bytes(0x6), # Kraid room 22 sprite layout 0[+]
	Kraid_23_SpriteLayout0 = Bytes(0x6), # Kraid room 23 sprite layout 0[+]
	Kraid_24_SpriteLayout0 = Bytes(0x6), # Kraid room 24 sprite layout 0[+]
	Kraid_25_SpriteLayout0 = Bytes(0x3), # Kraid room 25 sprite layout 0[+]
	Kraid_26_SpriteLayout1 = Bytes(0xF), # Kraid room 26 sprite layout 1[+]
	Kraid_26_SpriteLayout0 = Bytes(0xC), # Kraid room 26 sprite layout 0[+]
	Kraid_27_SpriteLayout0 = Bytes(0x6), # Kraid room 27 sprite layout 0[+]
	Kraid_28_SpriteLayout0 = Bytes(0x3), # Kraid room 28 sprite layout 0[+]
	Kraid_29_SpriteLayout0 = Bytes(0x3), # Kraid room 29 sprite layout 0[+]
	Norfair_00_SpriteLayout0 = Bytes(0xC), # Norfair room 0 sprite layout 0[+]
	Norfair_01_SpriteLayout2 = Bytes(0x1E), # Norfair room 1 sprite layout 2[+]
	Norfair_01_SpriteLayout1 = Bytes(0x2A), # Norfair room 1 sprite layout 1[+]
	Norfair_01_SpriteLayout0 = Bytes(0x27), # Norfair room 1 sprite layout 0[+]
	Norfair_02_SpriteLayout2 = Bytes(0xC), # Norfair room 2 sprite layout 2[+]
	Norfair_02_SpriteLayout1 = Bytes(0x15), # Norfair room 2 sprite layout 1[+]
	Norfair_02_SpriteLayout0 = Bytes(0x12), # Norfair room 2 sprite layout 0[+]
	Norfair_03_SpriteLayout2 = Bytes(0x1B), # Norfair room 3 sprite layout 2[+]
	Norfair_03_SpriteLayout1 = Bytes(0x21), # Norfair room 3 sprite layout 1[+]
	Norfair_03_SpriteLayout0 = Bytes(0x24), # Norfair room 3 sprite layout 0[+]
	Norfair_04_SpriteLayout2 = Bytes(0x33), # Norfair room 4 sprite layout 2[+]
	Norfair_04_SpriteLayout1 = Bytes(0x2A), # Norfair room 4 sprite layout 1[+]
	Norfair_04_SpriteLayout0 = Bytes(0x15), # Norfair room 4 sprite layout 0[+]
	Norfair_05_SpriteLayout1 = Bytes(0x2A), # Norfair room 5 sprite layout 1[+]
	Norfair_05_SpriteLayout0 = Bytes(0x27), # Norfair room 5 sprite layout 0[+]
	Norfair_06_SpriteLayout1 = Bytes(0x15), # Norfair room 6 sprite layout 1[+]
	Norfair_06_SpriteLayout0 = Bytes(0x15), # Norfair room 6 sprite layout 0[+]
	Norfair_07_SpriteLayout1 = Bytes(0x15), # Norfair room 7 sprite layout 1[+]
	Norfair_07_SpriteLayout0 = Bytes(0xC), # Norfair room 7 sprite layout 0[+]
	Norfair_08_SpriteLayout0 = Bytes(0x9), # Norfair room 8 sprite layout 0[+]
	Norfair_09_SpriteLayout2 = Bytes(0x9), # Norfair room 9 sprite layout 2[+]
	Norfair_09_SpriteLayout1 = Bytes(0x1B), # Norfair room 9 sprite layout 1[+]
	Norfair_09_SpriteLayout0 = Bytes(0x12), # Norfair room 9 sprite layout 0[+]
	Norfair_0A_SpriteLayout1 = Bytes(0x15), # Norfair room A sprite layout 1[+]
	Norfair_0A_SpriteLayout0 = Bytes(0x15), # Norfair room A sprite layout 0[+]
	Norfair_0B_SpriteLayout2 = Bytes(0xC), # Norfair room B sprite layout 2[+]
	Norfair_0B_SpriteLayout1 = Bytes(0x12), # Norfair room B sprite layout 1[+]
	Norfair_0B_SpriteLayout0 = Bytes(0xF), # Norfair room B sprite layout 0[+]
	Norfair_0C_SpriteLayout2 = Bytes(0xC), # Norfair room C sprite layout 2[+]
	Norfair_0C_SpriteLayout1 = Bytes(0x12), # Norfair room C sprite layout 1[+]
	Norfair_0C_SpriteLayout0 = Bytes(0x12), # Norfair room C sprite layout 0[+]
	Norfair_0D_SpriteLayout0 = Bytes(0x6), # Norfair room D sprite layout 0[+]
	Norfair_0E_SpriteLayout1 = Bytes(0x30), # Norfair room E sprite layout 1[+]
	Norfair_0E_SpriteLayout0 = Bytes(0x30), # Norfair room E sprite layout 0[+]
	Norfair_0F_SpriteLayout1 = Bytes(0xC), # Norfair room F sprite layout 1[+]
	Norfair_0F_SpriteLayout0 = Bytes(0x6), # Norfair room F sprite layout 0[+]
	Norfair_10_SpriteLayout0 = Bytes(0xC), # Norfair room 10 sprite layout 0[+]
	Norfair_11_SpriteLayout1 = Bytes(0xF), # Norfair room 11 sprite layout 1[+]
	Norfair_11_SpriteLayout0 = Bytes(0x15), # Norfair room 11 sprite layout 0[+]
	Norfair_12_SpriteLayout0 = Bytes(0x6), # Norfair room 12 sprite layout 0[+]
	Norfair_13_SpriteLayout0 = Bytes(0x15), # Norfair room 13 sprite layout 0[+]
	Norfair_14_SpriteLayout0 = Bytes(0x1B), # Norfair room 14 sprite layout 0[+]
	Norfair_15_SpriteLayout1 = Bytes(0x12), # Norfair room 15 sprite layout 1[+]
	Norfair_15_SpriteLayout0 = Bytes(0x12), # Norfair room 15 sprite layout 0[+]
	Norfair_16_SpriteLayout1 = Bytes(0x18), # Norfair room 16 sprite layout 1[+]
	Norfair_16_SpriteLayout0 = Bytes(0x18), # Norfair room 16 sprite layout 0[+]
	Norfair_17_SpriteLayout1 = Bytes(0x12), # Norfair room 17 sprite layout 1[+]
	Norfair_17_SpriteLayout0 = Bytes(0xF), # Norfair room 17 sprite layout 0[+]
	Norfair_18_SpriteLayout0 = Bytes(0x24), # Norfair room 18 sprite layout 0[+]
	Norfair_19_SpriteLayout1 = Bytes(0xF), # Norfair room 19 sprite layout 1[+]
	Norfair_19_SpriteLayout0 = Bytes(0x9), # Norfair room 19 sprite layout 0[+]
	Norfair_1A_SpriteLayout0 = Bytes(0x6), # Norfair room 1A sprite layout 0[+]
	Norfair_1B_SpriteLayout0 = Bytes(0x6), # Norfair room 1B sprite layout 0[+]
	Norfair_1C_SpriteLayout0 = Bytes(0x24), # Norfair room 1C sprite layout 0[+]
	Norfair_1D_SpriteLayout0 = Bytes(0x6), # Norfair room 1D sprite layout 0[+]
	Norfair_1E_SpriteLayout2 = Bytes(0x2A), # Norfair room 1E sprite layout 2[+]
	Norfair_1E_SpriteLayout1 = Bytes(0x36), # Norfair room 1E sprite layout 1[+]
	Norfair_1E_SpriteLayout0 = Bytes(0x33), # Norfair room 1E sprite layout 0[+]
	Norfair_1F_SpriteLayout0 = Bytes(0x9), # Norfair room 1F sprite layout 0[+]
	Norfair_20_SpriteLayout0 = Bytes(0xF), # Norfair room 20 sprite layout 0[+]
	Norfair_21_SpriteLayout0 = Bytes(0x2D), # Norfair room 21 sprite layout 0[+]
	Norfair_22_SpriteLayout0 = Bytes(0x6), # Norfair room 22 sprite layout 0[+]
	Norfair_23_SpriteLayout0 = Bytes(0xC), # Norfair room 23 sprite layout 0[+]
	Norfair_24_SpriteLayout0 = Bytes(0x6), # Norfair room 24 sprite layout 0[+]
	Norfair_25_SpriteLayout2 = Bytes(0x12), # Norfair room 25 sprite layout 2[+]
	Norfair_25_SpriteLayout1 = Bytes(0x27), # Norfair room 25 sprite layout 1[+]
	Norfair_25_SpriteLayout0 = Bytes(0x1E), # Norfair room 25 sprite layout 0[+]
	Norfair_26_SpriteLayout1 = Bytes(0x1E), # Norfair room 26 sprite layout 1[+]
	Norfair_26_SpriteLayout0 = Bytes(0x9), # Norfair room 26 sprite layout 0[+]
	Norfair_27_SpriteLayout0 = Bytes(0x6), # Norfair room 27 sprite layout 0[+]
	Norfair_28_SpriteLayout0 = Bytes(0x6), # Norfair room 28 sprite layout 0[+]
	Norfair_29_SpriteLayout0 = Bytes(0x6), # Norfair room 29 sprite layout 0[+]
	Norfair_2A_SpriteLayout0 = Bytes(0x9), # Norfair room 2A sprite layout 0[+]
	Norfair_2B_SpriteLayout0 = Bytes(0x9), # Norfair room 2B sprite layout 0[+]
	Norfair_2C_SpriteLayout0 = Bytes(0x6), # Norfair room 2C sprite layout 0[+]
	Norfair_2D_SpriteLayout0 = Bytes(0x6), # Norfair room 2D sprite layout 0[+]
	Norfair_2E_SpriteLayout0 = Bytes(0x6), # Norfair room 2E sprite layout 0[+]
	Norfair_2F_SpriteLayout2 = Bytes(0xC), # Norfair room 2F sprite layout 2[+]
	Norfair_2F_SpriteLayout1 = Bytes(0xF), # Norfair room 2F sprite layout 1[+]
	Norfair_2F_SpriteLayout0 = Bytes(0xF), # Norfair room 2F sprite layout 0[+]
	Norfair_30_SpriteLayout0 = Bytes(0x9), # Norfair room 30 sprite layout 0[+]
	Norfair_31_SpriteLayout0 = Bytes(0x9), # Norfair room 31 sprite layout 0[+]
	Norfair_32_SpriteLayout0 = Bytes(0x3), # Norfair room 32 sprite layout 0[+]
	Norfair_33_SpriteLayout0 = Bytes(0x3), # Norfair room 33 sprite layout 0[+]
	Norfair_34_SpriteLayout0 = Bytes(0x6), # Norfair room 34 sprite layout 0[+]
	Norfair_35_SpriteLayout0 = Bytes(0x6), # Norfair room 35 sprite layout 0[+]
	Norfair_36_SpriteLayout0 = Bytes(0x6), # Norfair room 36 sprite layout 0[+]
	Norfair_37_SpriteLayout0 = Bytes(0x3), # Norfair room 37 sprite layout 0[+]
	Norfair_38_SpriteLayout0 = Bytes(0x3), # Norfair room 38 sprite layout 0[+]
	Ridley_00_SpriteLayout0 = Bytes(0x6), # Ridley room 0 sprite layout 0[+]
	Ridley_01_SpriteLayout0 = Bytes(0x6), # Ridley room 1 sprite layout 0[+]
	Ridley_02_SpriteLayout0 = Bytes(0xC), # Ridley room 2 sprite layout 0[+]
	Ridley_03_SpriteLayout2 = Bytes(0x21), # Ridley room 3 sprite layout 2[+]
	Ridley_03_SpriteLayout1 = Bytes(0x24), # Ridley room 3 sprite layout 1[+]
	Ridley_03_SpriteLayout0 = Bytes(0x24), # Ridley room 3 sprite layout 0[+]
	Ridley_04_SpriteLayout0 = Bytes(0xC), # Ridley room 4 sprite layout 0[+]
	Ridley_05_SpriteLayout2 = Bytes(0x21), # Ridley room 5 sprite layout 2[+]
	Ridley_05_SpriteLayout1 = Bytes(0x2D), # Ridley room 5 sprite layout 1[+]
	Ridley_05_SpriteLayout0 = Bytes(0x2D), # Ridley room 5 sprite layout 0[+]
	Ridley_06_SpriteLayout0 = Bytes(0x15), # Ridley room 6 sprite layout 0[+]
	Ridley_07_SpriteLayout1 = Bytes(0x12), # Ridley room 7 sprite layout 1[+]
	Ridley_07_SpriteLayout0 = Bytes(0x18), # Ridley room 7 sprite layout 0[+]
	Ridley_08_SpriteLayout1 = Bytes(0xF), # Ridley room 8 sprite layout 1[+]
	Ridley_08_SpriteLayout0 = Bytes(0x12), # Ridley room 8 sprite layout 0[+]
	Ridley_09_SpriteLayout0 = Bytes(0x9), # Ridley room 9 sprite layout 0[+]
	Ridley_0A_SpriteLayout0 = Bytes(0xF), # Ridley room A sprite layout 0[+]
	Ridley_0B_SpriteLayout0 = Bytes(0xC), # Ridley room B sprite layout 0[+]
	Ridley_0C_SpriteLayout0 = Bytes(0x6), # Ridley room C sprite layout 0[+]
	Ridley_0D_SpriteLayout0 = Bytes(0x9), # Ridley room D sprite layout 0[+]
	Ridley_0E_SpriteLayout1 = Bytes(0x12), # Ridley room E sprite layout 1[+]
	Ridley_0E_SpriteLayout0 = Bytes(0x18), # Ridley room E sprite layout 0[+]
	Ridley_0F_SpriteLayout2 = Bytes(0x12), # Ridley room F sprite layout 2[+]
	Ridley_0F_SpriteLayout1 = Bytes(0xF), # Ridley room F sprite layout 1[+]
	Ridley_0F_SpriteLayout0 = Bytes(0x12), # Ridley room F sprite layout 0[+]
	Ridley_10_SpriteLayout1 = Bytes(0x15), # Ridley room 10 sprite layout 1[+]
	Ridley_10_SpriteLayout0 = Bytes(0x18), # Ridley room 10 sprite layout 0[+]
	Ridley_11_SpriteLayout2 = Bytes(0x1E), # Ridley room 11 sprite layout 2[+]
	Ridley_11_SpriteLayout1 = Bytes(0x27), # Ridley room 11 sprite layout 1[+]
	Ridley_11_SpriteLayout0 = Bytes(0x27), # Ridley room 11 sprite layout 0[+]
	Ridley_12_SpriteLayout2 = Bytes(0x2A), # Ridley room 12 sprite layout 2[+]
	Ridley_12_SpriteLayout1 = Bytes(0x30), # Ridley room 12 sprite layout 1[+]
	Ridley_12_SpriteLayout0 = Bytes(0x33), # Ridley room 12 sprite layout 0[+]
	Ridley_13_SpriteLayout0 = Bytes(0x6), # Ridley room 13 sprite layout 0[+]
	Ridley_14_SpriteLayout0 = Bytes(0x6), # Ridley room 14 sprite layout 0[+]
	Ridley_15_SpriteLayout0 = Bytes(0x6), # Ridley room 15 sprite layout 0[+]
	Ridley_16_SpriteLayout0 = Bytes(0x3), # Ridley room 16 sprite layout 0[+]
	Ridley_17_SpriteLayout0 = Bytes(0x6), # Ridley room 17 sprite layout 0[+]
	Ridley_18_SpriteLayout0 = Bytes(0x6), # Ridley room 18 sprite layout 0[+]
	Ridley_19_SpriteLayout0 = Bytes(0x6), # Ridley room 19 sprite layout 0[+]
	Ridley_1A_SpriteLayout0 = Bytes(0x2D), # Ridley room 1A sprite layout 0[+]
	Ridley_1B_SpriteLayout0 = Bytes(0x6), # Ridley room 1B sprite layout 0[+]
	Ridley_1C_SpriteLayout0 = Bytes(0xF), # Ridley room 1C sprite layout 0[+]
	Ridley_1D_SpriteLayout0 = Bytes(0x3), # Ridley room 1D sprite layout 0[+]
	Ridley_1E_SpriteLayout0 = Bytes(0x3), # Ridley room 1E sprite layout 0[+]
	Ridley_1F_SpriteLayout0 = Bytes(0x3), # Ridley room 1F sprite layout 0[+]
	Ridley_20_SpriteLayout0 = Bytes(0x3), # Ridley room 20 sprite layout 0[+]
	Tourian_00_SpriteLayout0 = Bytes(0x6), # Tourian room 0 sprite layout 0[+]
	Tourian_01_SpriteLayout1 = Bytes(0x30), # Tourian room 1 sprite layout 1[+]
	Tourian_01_SpriteLayout0 = Bytes(0x1E), # Tourian room 1 sprite layout 0[+]
	Tourian_02_SpriteLayout1 = Bytes(0x27), # Tourian room 2 sprite layout 1[+]
	Tourian_02_SpriteLayout0 = Bytes(0x24), # Tourian room 2 sprite layout 0[+]
	Tourian_03_SpriteLayout0 = Bytes(0x18), # Tourian room 3 sprite layout 0[+]
	Tourian_04_SpriteLayout0 = Bytes(0x33), # Tourian room 4 sprite layout 0[+]
	Tourian_05_SpriteLayout0 = Bytes(0x48), # Tourian room 5 sprite layout 0[+]
	Tourian_06_SpriteLayout0 = Bytes(0x6), # Tourian room 6 sprite layout 0[+]
	Tourian_07_SpriteLayout0 = Bytes(0x3), # Tourian room 7 sprite layout 0[+]
	Tourian_08_SpriteLayout0 = Bytes(0x6), # Tourian room 8 sprite layout 0[+]
	Tourian_09_SpriteLayout0 = Bytes(0x3), # Tourian room 9 sprite layout 0[+]
	Tourian_0A_SpriteLayout0 = Bytes(0x3), # Tourian room A sprite layout 0[+]
	Tourian_0B_SpriteLayout0 = Bytes(0x6), # Tourian room B sprite layout 0[+]
	Tourian_0C_SpriteLayout0 = Bytes(0x3), # Tourian room C sprite layout 0[+]
	Tourian_0D_SpriteLayout1 = Bytes(0xC), # Tourian room D sprite layout 1[+]
	Tourian_0D_SpriteLayout0 = Bytes(0x6), # Tourian room D sprite layout 0[+]
	Tourian_0E_SpriteLayout1 = Bytes(0x12), # Tourian room E sprite layout 1[+]
	Tourian_0E_SpriteLayout0 = Bytes(0xC), # Tourian room E sprite layout 0[+]
	Tourian_0F_SpriteLayout1 = Bytes(0x24), # Tourian room F sprite layout 1[+]
	Tourian_0F_SpriteLayout0 = Bytes(0x15), # Tourian room F sprite layout 0[+]
	Tourian_10_SpriteLayout1 = Bytes(0x2D), # Tourian room 10 sprite layout 1[+]
	Tourian_10_SpriteLayout0 = Bytes(0x2A), # Tourian room 10 sprite layout 0[+]
	Tourian_11_SpriteLayout0 = Bytes(0x6), # Tourian room 11 sprite layout 0[+]
	Tourian_12_SpriteLayout0 = Bytes(0x9), # Tourian room 12 sprite layout 0[+]
	Tourian_13_SpriteLayout1 = Bytes(0x2D), # Tourian room 13 sprite layout 1[+]
	Tourian_13_SpriteLayout0 = Bytes(0x21), # Tourian room 13 sprite layout 0[+]
	Crateria_00_SpriteLayout0 = Bytes(0x6), # Crateria room 0 sprite layout 0[+]
	Crateria_01_SpriteLayout0 = Bytes(0x39), # Crateria room 1 sprite layout 0[+]
	Crateria_02_SpriteLayout0 = Bytes(0x3), # Crateria room 2 sprite layout 0[+]
	Crateria_03_SpriteLayout0 = Bytes(0x3), # Crateria room 3 sprite layout 0[+]
	Crateria_04_SpriteLayout0 = Bytes(0x1B), # Crateria room 4 sprite layout 0[+]
	Crateria_05_SpriteLayout0 = Bytes(0x3), # Crateria room 5 sprite layout 0[+]
	Crateria_06_SpriteLayout0 = Bytes(0x6), # Crateria room 6 sprite layout 0[+]
	Crateria_07_SpriteLayout0 = Bytes(0x3C), # Crateria room 7 sprite layout 0[+]
	Crateria_08_SpriteLayout0 = Bytes(0x3), # Crateria room 8 sprite layout 0[+]
	Crateria_09_SpriteLayout0 = Bytes(0x6), # Crateria room 9 sprite layout 0[+]
	Crateria_0A_SpriteLayout0 = Bytes(0x3), # Crateria room A sprite layout 0[+]
	Crateria_0B_SpriteLayout0 = Bytes(0x15), # Crateria room B sprite layout 0[+]
	Crateria_0C_SpriteLayout0 = Bytes(0x6), # Crateria room C sprite layout 0[+]
	Crateria_0D_SpriteLayout0 = Bytes(0x3), # Crateria room D sprite layout 0[+]
	Crateria_0E_SpriteLayout0 = Bytes(0x21), # Crateria room E sprite layout 0[+]
	Crateria_0F_SpriteLayout0 = Bytes(0x3), # Crateria room F sprite layout 0[+]
	Crateria_10_SpriteLayout0 = Bytes(0x6), # Crateria room 10 sprite layout 0[+]
	Crateria_11_SpriteLayout0 = Bytes(0x6), # Crateria room 11 sprite layout 0[+]
	Crateria_12_SpriteLayout0 = Bytes(0x6), # Crateria room 12 sprite layout 0[+]
	Crateria_13_SpriteLayout0 = Bytes(0x3), # Crateria room 13 sprite layout 0[+]
	Crateria_14_SpriteLayout0 = Bytes(0x3), # Crateria room 14 sprite layout 0[+]
	Crateria_15_SpriteLayout0 = Bytes(0x3), # Crateria room 15 sprite layout 0[+]
	Chozodia_00_SpriteLayout0 = Bytes(0x3), # Chozodia room 0 sprite layout 0[+]
	Chozodia_01_SpriteLayout0 = Bytes(0x3), # Chozodia room 1 sprite layout 0[+]
	Chozodia_02_SpriteLayout0 = Bytes(0xC), # Chozodia room 2 sprite layout 0[+]
	Chozodia_03_SpriteLayout0 = Bytes(0x18), # Chozodia room 3 sprite layout 0[+]
	Chozodia_04_SpriteLayout1 = Bytes(0x6), # Chozodia room 4 sprite layout 1[+]
	Chozodia_04_SpriteLayout0 = Bytes(0x6), # Chozodia room 4 sprite layout 0[+]
	Chozodia_05_SpriteLayout0 = Bytes(0xF), # Chozodia room 5 sprite layout 0[+]
	Chozodia_06_SpriteLayout0 = Bytes(0x6), # Chozodia room 6 sprite layout 0[+]
	Chozodia_07_SpriteLayout1 = Bytes(0x9), # Chozodia room 7 sprite layout 1[+]
	Chozodia_07_SpriteLayout0 = Bytes(0x3), # Chozodia room 7 sprite layout 0[+]
	Chozodia_08_SpriteLayout0 = Bytes(0x6), # Chozodia room 8 sprite layout 0[+]
	Chozodia_09_SpriteLayout0 = Bytes(0x3), # Chozodia room 9 sprite layout 0[+]
	Chozodia_0A_SpriteLayout0 = Bytes(0x9), # Chozodia room A sprite layout 0[+]
	Chozodia_0B_SpriteLayout0 = Bytes(0x6), # Chozodia room B sprite layout 0[+]
	Chozodia_0C_SpriteLayout0 = Bytes(0x9), # Chozodia room C sprite layout 0[+]
	Chozodia_0D_SpriteLayout2 = Bytes(0xC), # Chozodia room D sprite layout 2[+]
	Chozodia_0D_SpriteLayout1 = Bytes(0x18), # Chozodia room D sprite layout 1[+]
	Chozodia_0D_SpriteLayout0 = Bytes(0x9), # Chozodia room D sprite layout 0[+]
	Chozodia_0E_SpriteLayout1 = Bytes(0x12), # Chozodia room E sprite layout 1[+]
	Chozodia_0E_SpriteLayout0 = Bytes(0x9), # Chozodia room E sprite layout 0[+]
	Chozodia_0F_SpriteLayout0 = Bytes(0x6), # Chozodia room F sprite layout 0[+]
	Chozodia_10_SpriteLayout2 = Bytes(0x1E), # Chozodia room 10 sprite layout 2[+]
	Chozodia_10_SpriteLayout1 = Bytes(0xF), # Chozodia room 10 sprite layout 1[+]
	Chozodia_10_SpriteLayout0 = Bytes(0x15), # Chozodia room 10 sprite layout 0[+]
	Chozodia_11_SpriteLayout1 = Bytes(0x6), # Chozodia room 11 sprite layout 1[+]
	Chozodia_11_SpriteLayout0 = Bytes(0x6), # Chozodia room 11 sprite layout 0[+]
	Chozodia_12_SpriteLayout2 = Bytes(0x1E), # Chozodia room 12 sprite layout 2[+]
	Chozodia_12_SpriteLayout1 = Bytes(0x2D), # Chozodia room 12 sprite layout 1[+]
	Chozodia_12_SpriteLayout0 = Bytes(0x45), # Chozodia room 12 sprite layout 0[+]
	Chozodia_13_SpriteLayout0 = Bytes(0x6), # Chozodia room 13 sprite layout 0[+]
	Chozodia_14_SpriteLayout0 = Bytes(0x9), # Chozodia room 14 sprite layout 0[+]
	Chozodia_15_SpriteLayout0 = Bytes(0x6), # Chozodia room 15 sprite layout 0[+]
	Chozodia_16_SpriteLayout1 = Bytes(0x9), # Chozodia room 16 sprite layout 1[+]
	Chozodia_16_SpriteLayout0 = Bytes(0x3), # Chozodia room 16 sprite layout 0[+]
	Chozodia_17_SpriteLayout0 = Bytes(0xC), # Chozodia room 17 sprite layout 0[+]
	Chozodia_18_SpriteLayout0 = Bytes(0x3), # Chozodia room 18 sprite layout 0[+]
	Chozodia_19_SpriteLayout0 = Bytes(0x6), # Chozodia room 19 sprite layout 0[+]
	Chozodia_1A_SpriteLayout0 = Bytes(0x9), # Chozodia room 1A sprite layout 0[+]
	Chozodia_1B_SpriteLayout0 = Bytes(0x6), # Chozodia room 1B sprite layout 0[+]
	Chozodia_1C_SpriteLayout2 = Bytes(0x15), # Chozodia room 1C sprite layout 2[+]
	Chozodia_1C_SpriteLayout1 = Bytes(0x24), # Chozodia room 1C sprite layout 1[+]
	Chozodia_1C_SpriteLayout0 = Bytes(0x1B), # Chozodia room 1C sprite layout 0[+]
	Chozodia_1D_SpriteLayout1 = Bytes(0x15), # Chozodia room 1D sprite layout 1[+]
	Chozodia_1D_SpriteLayout0 = Bytes(0x6), # Chozodia room 1D sprite layout 0[+]
	Chozodia_1E_SpriteLayout0 = Bytes(0xF), # Chozodia room 1E sprite layout 0[+]
	Chozodia_1F_SpriteLayout0 = Bytes(0x12), # Chozodia room 1F sprite layout 0[+]
	Chozodia_20_SpriteLayout0 = Bytes(0x9), # Chozodia room 20 sprite layout 0[+]
	Chozodia_21_SpriteLayout0 = Bytes(0x3), # Chozodia room 21 sprite layout 0[+]
	Chozodia_22_SpriteLayout1 = Bytes(0xF), # Chozodia room 22 sprite layout 1[+]
	Chozodia_22_SpriteLayout0 = Bytes(0x6), # Chozodia room 22 sprite layout 0[+]
	Chozodia_23_SpriteLayout0 = Bytes(0x12), # Chozodia room 23 sprite layout 0[+]
	Chozodia_24_SpriteLayout0 = Bytes(0x3), # Chozodia room 24 sprite layout 0[+]
	Chozodia_25_SpriteLayout1 = Bytes(0x9), # Chozodia room 25 sprite layout 1[+]
	Chozodia_25_SpriteLayout0 = Bytes(0x3), # Chozodia room 25 sprite layout 0[+]
	Chozodia_26_SpriteLayout0 = Bytes(0x3), # Chozodia room 26 sprite layout 0[+]
	Chozodia_27_SpriteLayout0 = Bytes(0x15), # Chozodia room 27 sprite layout 0[+]
	Chozodia_28_SpriteLayout0 = Bytes(0x6), # Chozodia room 28 sprite layout 0[+]
	Chozodia_29_SpriteLayout0 = Bytes(0x6), # Chozodia room 29 sprite layout 0[+]
	Chozodia_2A_SpriteLayout0 = Bytes(0x6), # Chozodia room 2A sprite layout 0[+]
	Chozodia_2B_SpriteLayout0 = Bytes(0x9), # Chozodia room 2B sprite layout 0[+]
	Chozodia_2C_SpriteLayout1 = Bytes(0xC), # Chozodia room 2C sprite layout 1[+]
	Chozodia_2C_SpriteLayout0 = Bytes(0x12), # Chozodia room 2C sprite layout 0[+]
	Chozodia_2D_SpriteLayout0 = Bytes(0x3), # Chozodia room 2D sprite layout 0[+]
	Chozodia_2E_SpriteLayout0 = Bytes(0x6), # Chozodia room 2E sprite layout 0[+]
	Chozodia_2F_SpriteLayout0 = Bytes(0x18), # Chozodia room 2F sprite layout 0[+]
	Chozodia_30_SpriteLayout1 = Bytes(0x6), # Chozodia room 30 sprite layout 1[+]
	Chozodia_30_SpriteLayout0 = Bytes(0x6), # Chozodia room 30 sprite layout 0[+]
	Chozodia_31_SpriteLayout0 = Bytes(0x9), # Chozodia room 31 sprite layout 0[+]
	Chozodia_32_SpriteLayout0 = Bytes(0x3), # Chozodia room 32 sprite layout 0[+]
	Chozodia_33_SpriteLayout1 = Bytes(0x18), # Chozodia room 33 sprite layout 1[+]
	Chozodia_33_SpriteLayout0 = Bytes(0x15), # Chozodia room 33 sprite layout 0[+]
	Chozodia_34_SpriteLayout1 = Bytes(0x6), # Chozodia room 34 sprite layout 1[+]
	Chozodia_34_SpriteLayout0 = Bytes(0xF), # Chozodia room 34 sprite layout 0[+]
	Chozodia_35_SpriteLayout1 = Bytes(0x9), # Chozodia room 35 sprite layout 1[+]
	Chozodia_35_SpriteLayout0 = Bytes(0xF), # Chozodia room 35 sprite layout 0[+]
	Chozodia_36_SpriteLayout0 = Bytes(0x3), # Chozodia room 36 sprite layout 0[+]
	Chozodia_37_SpriteLayout0 = Bytes(0x6), # Chozodia room 37 sprite layout 0[+]
	Chozodia_38_SpriteLayout0 = Bytes(0x18), # Chozodia room 38 sprite layout 0[+]
	Chozodia_39_SpriteLayout0 = Bytes(0xC), # Chozodia room 39 sprite layout 0[+]
	Chozodia_3A_SpriteLayout0 = Bytes(0x12), # Chozodia room 3A sprite layout 0[+]
	Chozodia_3B_SpriteLayout1 = Bytes(0x12), # Chozodia room 3B sprite layout 1[+]
	Chozodia_3B_SpriteLayout0 = Bytes(0x15), # Chozodia room 3B sprite layout 0[+]
	Chozodia_3C_SpriteLayout0 = Bytes(0x12), # Chozodia room 3C sprite layout 0[+]
	Chozodia_3D_SpriteLayout0 = Bytes(0x6), # Chozodia room 3D sprite layout 0[+]
	Chozodia_3E_SpriteLayout0 = Bytes(0xF), # Chozodia room 3E sprite layout 0[+]
	Chozodia_3F_SpriteLayout0 = Bytes(0x18), # Chozodia room 3F sprite layout 0[+]
	Chozodia_40_SpriteLayout0 = Bytes(0xC), # Chozodia room 40 sprite layout 0[+]
	Chozodia_41_SpriteLayout0 = Bytes(0x15), # Chozodia room 41 sprite layout 0[+]
	Chozodia_42_SpriteLayout0 = Bytes(0x3), # Chozodia room 42 sprite layout 0[+]
	Chozodia_43_SpriteLayout0 = Bytes(0x15), # Chozodia room 43 sprite layout 0[+]
	Chozodia_44_SpriteLayout0 = Bytes(0x3), # Chozodia room 44 sprite layout 0[+]
	Chozodia_45_SpriteLayout0 = Bytes(0x6), # Chozodia room 45 sprite layout 0[+]
	Chozodia_46_SpriteLayout0 = Bytes(0x3), # Chozodia room 46 sprite layout 0[+]
	Chozodia_47_SpriteLayout0 = Bytes(0x39), # Chozodia room 47 sprite layout 0[+]
	Chozodia_48_SpriteLayout0 = Bytes(0x6), # Chozodia room 48 sprite layout 0[+]
	Chozodia_49_SpriteLayout0 = Bytes(0xC), # Chozodia room 49 sprite layout 0[+]
	Chozodia_4A_SpriteLayout0 = Bytes(0x6), # Chozodia room 4A sprite layout 0[+]
	Chozodia_4B_SpriteLayout0 = Bytes(0x6), # Chozodia room 4B sprite layout 0[+]
	Chozodia_4C_SpriteLayout1 = Bytes(0x9), # Chozodia room 4C sprite layout 1[+]
	Chozodia_4C_SpriteLayout0 = Bytes(0x6), # Chozodia room 4C sprite layout 0[+]
	Chozodia_4D_SpriteLayout0 = Bytes(0x9), # Chozodia room 4D sprite layout 0[+]
	Chozodia_4E_SpriteLayout0 = Bytes(0x3), # Chozodia room 4E sprite layout 0[+]
	Chozodia_4F_SpriteLayout0 = Bytes(0x12), # Chozodia room 4F sprite layout 0[+]
	Chozodia_50_SpriteLayout0 = Bytes(0x3), # Chozodia room 50 sprite layout 0[+]
	Chozodia_51_SpriteLayout0 = Bytes(0x3), # Chozodia room 51 sprite layout 0[+]
	Chozodia_52_SpriteLayout0 = Bytes(0x3), # Chozodia room 52 sprite layout 0[+]
	Chozodia_53_SpriteLayout0 = Bytes(0x15), # Chozodia room 53 sprite layout 0[+]
	Chozodia_54_SpriteLayout0 = Bytes(0x9), # Chozodia room 54 sprite layout 0[+]
	Chozodia_55_SpriteLayout0 = Bytes(0xC), # Chozodia room 55 sprite layout 0[+]
	Chozodia_56_SpriteLayout0 = Bytes(0x3), # Chozodia room 56 sprite layout 0[+]
	Chozodia_57_SpriteLayout0 = Bytes(0x3), # Chozodia room 57 sprite layout 0[+]
	Chozodia_58_SpriteLayout0 = Bytes(0x3), # Chozodia room 58 sprite layout 0[+]
	Chozodia_59_SpriteLayout0 = Bytes(0x9), # Chozodia room 59 sprite layout 0[+]
	Chozodia_5A_SpriteLayout0 = Bytes(0xF), # Chozodia room 5A sprite layout 0[+]
	Chozodia_5B_SpriteLayout0 = Bytes(0x9), # Chozodia room 5B sprite layout 0[+]
	Chozodia_5C_SpriteLayout0 = Bytes(0xC), # Chozodia room 5C sprite layout 0[+]
	Chozodia_5D_SpriteLayout0 = Bytes(0x12), # Chozodia room 5D sprite layout 0[+]
	Chozodia_5E_SpriteLayout0 = Bytes(0x3), # Chozodia room 5E sprite layout 0[+]
	Chozodia_5F_SpriteLayout0 = Bytes(0x12), # Chozodia room 5F sprite layout 0[+]
	Chozodia_60_SpriteLayout0 = Bytes(0x15), # Chozodia room 60 sprite layout 0[+]
	Chozodia_61_SpriteLayout0 = Bytes(0x6), # Chozodia room 61 sprite layout 0[+]
	Chozodia_62_SpriteLayout0 = Bytes(0x3), # Chozodia room 62 sprite layout 0[+]
	GfxForAnimGraphics = Bytes(0x5200), # Graphics for animated graphics
	EWRAM_Ptr = Bytes(0x4), # EWRAM pointer (2000000)
	PALRAM_BG_Ptr = Bytes(0x4), # PALRAM BG pointer (5000000)
	PALRAM_OBJ_Ptr = Bytes(0x4), # PALRAM OBJ pointer (5000200)
	VisitedMinimapTilesPtr = Bytes(0x4), # Visited minimap tiles pointer (2037400)
	NonGameplayRamPtr = Bytes(0x4), # Non-gameplay RAM pointer
	SRAM_EWRAM_Ptr = Bytes(0x4), # SRAM EWRAM Pointer (2038000)
	SRAM_Flash_Ptr = Bytes(0x4), # SRAM flash pointer (E000000)
	SamusPoseFunctionPtrs = Bytes(0x10C), # Samus pose function pointers
	SamusPoseGfxFunctionPtrs = Bytes(0x10C), # Samus pose graphics function pointers
	PrimarySpriteAIPtrs = Bytes(0x338), # Primary sprite AI pointers
	SpriteGraphicsPtrs = Bytes(0x2F8), # Sprite graphics pointers
	SpritePalettePtrs = Bytes(0x2F8), # Sprite palette pointers
	SecondarySpriteAIPtrs = Bytes(0x134), # Secondary sprite AI pointers
	SpritesetPtrs = Bytes(0x1C8), # Spriteset pointers[+]
	ProcessProjectilePtrs = Bytes(0x40), # Process projectile pointers
	ProcessParticleEffectPtrs = Bytes(0xF4), # Process particle effect pointers
	AreaDoorsPtrs = Bytes(0x1C), # Area doors pointers[+]
	AreaRoomEntryPtrs = Bytes(0x1C), # Area room entry pointers[+]
	RoomScrollsPtrs = Bytes(0x248), # Room scrolls pointers
	AreaScrollsPtrs = Bytes(0x2C), # Area scrolls pointers
	NonReformDestroyFunctionPtrs = Bytes(0x14), # No/never reform block destroy function pointers
	HazeData = Bytes(0x34), # Haze data[+]
	SpecialBGEffectBehaviorPtrs = Bytes(0x24), # Special background effect behavior pointers[+]
	HatchLockEventPtrs = Bytes(0x1C), # Hatch lock event pointers[+]
	DemoRamDataPtrs = Bytes(0x40), # Demo RAM data pointers[+]
	StoryTextPtrs = Bytes(0x1C), # Story text pointers
	MinimapDataPtrs = Bytes(0x2C), # Minimap data pointers
	ExploredMinimapBitFlags = Bytes(0x80), # Explored minimap bit flags
	CopyMinimapTileGfxFunctionPtrs = Bytes(0x10), # Copy minimap tile graphics function pointers
	DescriptionTextPtrs = Bytes(0x1C), # Description text pointers
	ChozoStatueHintPathPtrs = Bytes(0x18), # Chozo statue hint path pointers
	JapaneseMessageTextPtrs = Bytes(0x9C), # Japanese message text pointers
	JapaneseLocationTextPtrs = Bytes(0x68), # Japanese location text pointers
	HiraganaMessageTextPtrs = Bytes(0x9C), # Hiragana message text pointers
	HiraganaLocationTextPtrs = Bytes(0x68), # Hiragana location text pointers
	EnglishMessageTextPtrs = Bytes(0x9C), # English message text pointers
	EnglishLocationTextPtrs = Bytes(0x68), # English location text pointers
	LocationTextPtrs = Bytes(0x1C), # Location text pointers
	MessageTextPtrs = Bytes(0x1C), # Message text pointers
	FileScreenTextPtrs = Bytes(0x1C), # File screen text pointers
	JapaneseDescriptionTextPtrs = Bytes(0x4C), # Japanese description text pointers
	JapaneseStoryTextPtrs = Bytes(0x18), # Japanese story text pointers
	JapaneseFileScreenTextPtrs = Bytes(0x94), # Japanese file screen text pointers
	HiraganaDescriptionTextPtrs = Bytes(0x4C), # Hiragana description text pointers
	HiraganaStoryTextPtrs = Bytes(0x18), # Hiragana story text pointers
	HiraganaFileScreenTextPtrs = Bytes(0x94), # Hiragana file screen text pointers
	EnglishDescriptionTextPtrs = Bytes(0x4C), # English description text pointers
	EnglishStoryTextPtrs = Bytes(0x18), # English story text pointers
	EnglishFileScreenTextPtrs = Bytes(0x94), # English file screen text pointers
	SoundTestSoundIDs = Bytes(0x30), # Sound test sound IDs
	MenuSoundIDs = Bytes(0x1A), # Menu sound IDs
	TimeAttackPasswordSeedFunctionPtrs = Bytes(0x3C), # Time attack password seed function pointers
	NesMetroidData = Bytes(0x1F734), # NES Metroid data
)